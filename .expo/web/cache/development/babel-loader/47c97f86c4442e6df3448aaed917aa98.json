{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/azatochniy/ownCloud/D/React-Native/Screens/Auth/LoginScreen/LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { secureTextEntry } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isKeyboard = _useState2[0],\n      setIsKeyboard = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var stateString = function stateString() {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  var pressButton = function pressButton() {\n    setIsKeyboard(false);\n    Keyboard.dismiss();\n    console.log(email, password);\n    stateString();\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      setIsKeyboard(false);\n      Keyboard.dismiss();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(ImageBackground, {\n    style: styles.img,\n    source: require(\"../../../assets/img/photo.jpg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.form), {}, {\n      marginBottom: isKeyboard ? 10 : 100\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.header), {}, {\n      height: isKeyboard ? \"30%\" : \"50%\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Hello word\"), React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"welcome back\")), React.createElement(TouchableOpacity, {\n    style: {\n      width: 50\n    },\n    activeOpacity: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 14\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.text), {}, {\n      textAlign: 'left'\n    }),\n    onPress: function onPress() {\n      return navigation.navigate('Home');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Home\")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \" Email\"), React.createElement(TextInput, {\n    value: email,\n    onChangeText: function onChangeText(val) {\n      setEmail(val);\n    },\n    style: styles.input,\n    onFocus: function onFocus() {\n      setIsKeyboard(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \" Password\"), React.createElement(TextInput, {\n    value: password,\n    onChangeText: function onChangeText(val) {\n      setPassword(val);\n    },\n    secureTextEntry: true,\n    style: styles.input,\n    onFocus: function onFocus() {\n      setIsKeyboard(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: pressButton,\n    activeOpacity: 0.5,\n    style: styles.btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.btnText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"Log in\")), React.createElement(TouchableOpacity, {\n    style: {\n      width: 140,\n      marginLeft: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.text), {}, {\n      paddingTop: 20\n    }),\n    onPress: function onPress() {\n      return navigation.navigate('Registration');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"Go to Sing Up\"))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  img: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\"\n  },\n  form: {\n    marginHorizontal: 20\n  },\n  header: {\n    justifyContent: \"center\"\n  },\n  headerText: {\n    color: \"#fff\",\n    fontSize: 50,\n    textAlign: \"center\",\n    fontFamily: \"DancingScript-Regular\"\n  },\n  text: {\n    fontSize: 25,\n    fontWeight: \"900\",\n    color: \"#fff\",\n    textAlign: \"center\",\n    marginBottom: 10,\n    fontFamily: \"DancingScript-Regular\"\n  },\n  input: {\n    borderWidth: 2,\n    borderColor: \"#fff\",\n    borderRadius: 10,\n    height: 40,\n    color: \"#fff\",\n    textAlign: \"center\",\n    fontFamily: \"DancingScript-Regular\",\n    fontWeight: \"900\",\n    fontSize: 20\n  },\n  btn: {\n    marginTop: 40,\n    height: 40,\n    backgroundColor: \"#0000cd\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    width: \"50%\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  btnText: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    fontSize: 18,\n    fontFamily: \"DancingScript-Regular\"\n  }\n});","map":{"version":3,"sources":["/home/azatochniy/ownCloud/D/React-Native/Screens/Auth/LoginScreen/LoginScreen.js"],"names":["React","useState","secureTextEntry","LoginScreen","navigation","isKeyboard","setIsKeyboard","email","setEmail","password","setPassword","stateString","pressButton","Keyboard","dismiss","console","log","styles","container","img","require","form","marginBottom","header","height","headerText","width","text","textAlign","navigate","val","input","marginTop","btn","btnText","marginLeft","paddingTop","StyleSheet","create","flex","backgroundColor","resizeMode","justifyContent","marginHorizontal","color","fontSize","fontFamily","fontWeight","borderWidth","borderColor","borderRadius","marginRight"],"mappings":"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","sourcesContent":["// import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ImageBackground,\n  TextInput,\n  secureTextEntry,\n  TouchableOpacity,\n  Keyboard,\n  TouchableWithoutFeedback,\n} from \"react-native\";\n// import * as Font from \"expo-font\";\n// import AppLoading from \"expo-app-loading\";\n\n\n\nexport default function LoginScreen({navigation}) {\n  const [isKeyboard, setIsKeyboard] = useState(false);\n  // const [state, setState] = useState(initial)\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // const [isReady, setIsReady] = useState(false);\n\n  const stateString = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n  const pressButton = () => {\n    setIsKeyboard(false);\n    Keyboard.dismiss();\n    console.log(email, password);\n    stateString();\n  };\n\n  // if (!isReady) {\n  //   return (\n  //     <AppLoading\n  //       startAsync={loadApp}\n  //       onFinish={() => {\n  //         setIsReady(true);\n  //       }}\n  //       onError={console.warn}\n  //     />\n  //   );\n  // }\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={() => {\n        setIsKeyboard(false);\n        Keyboard.dismiss();\n      }}\n    >\n      <View style={styles.container}>\n        <ImageBackground\n          style={styles.img}\n          source={require(\"../../../assets/img/photo.jpg\")}\n        >\n          <View style={{ ...styles.form, marginBottom: isKeyboard ? 10 : 100 }}>\n            <View\n              style={{ ...styles.header, height: isKeyboard ? \"30%\" : \"50%\" }}\n            >\n              <Text style={styles.headerText}>Hello word</Text>\n              <Text style={styles.headerText}>welcome back</Text>\n            </View>\n             <TouchableOpacity  style={{width: 50}} activeOpacity={0.5}>\n                    <Text style={{...styles.text, textAlign:'left'}} onPress={() => navigation.navigate('Home')}>Home</Text>\n                </TouchableOpacity>\n            <View>\n              <Text style={styles.text}> Email</Text>\n              <TextInput\n                value={email}\n                onChangeText={(val) => {\n                  setEmail(val);\n                }}\n                style={styles.input}\n                onFocus={() => {\n                  setIsKeyboard(true);\n                }}\n              />\n            </View>\n            <View style={{ marginTop: 20 }}>\n              <Text style={styles.text}> Password</Text>\n              <TextInput\n                value={password}\n                onChangeText={(val) => {\n                  setPassword(val);\n                }}\n                secureTextEntry={true}\n                style={styles.input}\n                onFocus={() => {\n                  setIsKeyboard(true);\n                }}\n              />\n            </View>\n            <TouchableOpacity\n              onPress={pressButton}\n              activeOpacity={0.5}\n              style={styles.btn}\n            >\n              <Text style={styles.btnText}>Log in</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={{width:140, marginLeft:'auto',}}\n              // activeOpacity={0.5}\n            >\n                    <Text style={{...styles.text,   paddingTop:20, }} onPress={() => navigation.navigate('Registration')}>Go to Sing Up</Text>\n                </TouchableOpacity>\n          </View>\n        </ImageBackground>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  img: {\n    flex: 1,\n    resizeMode: \"cover\",\n    // justifyContent: 'center'\n    justifyContent: \"flex-end\",\n  },\n  form: {\n    marginHorizontal: 20,\n  },\n  header: {\n    // height: '50%',\n    justifyContent: \"center\",\n  },\n  headerText: {\n    color: \"#fff\",\n    fontSize: 50,\n    textAlign: \"center\",\n    fontFamily: \"DancingScript-Regular\",\n  },\n  text: {\n    fontSize: 25,\n    fontWeight: \"900\",\n    color: \"#fff\",\n    textAlign: \"center\",\n    marginBottom: 10,\n    fontFamily: \"DancingScript-Regular\",\n  },\n  input: {\n    borderWidth: 2,\n    borderColor: \"#fff\",\n    borderRadius: 10,\n    height: 40,\n    color: \"#fff\",\n    textAlign: \"center\",\n    fontFamily: \"DancingScript-Regular\",\n    fontWeight: \"900\",\n    fontSize: 20,\n  },\n  btn: {\n    marginTop: 40,\n    height: 40,\n    backgroundColor: `#0000cd`,\n    justifyContent: \"center\",\n    borderRadius: 10,\n    width: \"50%\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  btnText: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    fontSize: 18,\n    fontFamily: \"DancingScript-Regular\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}